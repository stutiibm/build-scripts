name: Build Info

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      version:
        required: true
        type: string
      validate_build_script:
        required: true
        type: string
      wheel_build:
        required: true
        type: string
      build_docker:
        required: true
        type: string
      enable_trivy:
        required: true
        type: string
      enable_syft:
        required: true
        type: string
      enable_grype:
        required: true
        type: string
      unique_id:
        required: false
        type: string

jobs:
  build_info:
    runs-on: ubuntu-24.04-ppc64le-p10
    env:
      PACKAGE_NAME: ${{ inputs.package_name }}
      VERSION: ${{ inputs.version }}
      VALIDATE_BUILD_SCRIPT: ${{ inputs.validate_build_script }}
      WHEEL_BUILD: ${{ inputs.wheel_build }}
      BUILD_DOCKER: ${{ inputs.build_docker }}
      ENABLE_TRIVY: ${{ inputs.enable_trivy }}
      ENABLE_SYFT: ${{ inputs.enable_syft }}
      ENABLE_GRYPE: ${{ inputs.enable_grype }}
    steps:
      - uses: actions/checkout@v4

      - name: Install system packages
        run: |
          sudo apt update -y
          sudo apt install -y jq file

      - name: Install Python dependencies
        run: |
          pip3 install --force-reinstall -v "requests==2.31.0"
          pip3 install --upgrade docker

      - name: Get Build Info and Save Variables
        run: |
          chmod +x ./gha-script/read_buildinfo.sh
          bash ./gha-script/read_buildinfo.sh

      - name: Create scanner-env.sh and move artifacts
        run: |
          mkdir package-cache
          echo "export VALIDATE_BUILD_SCRIPT='${{ inputs.validate_build_script }}'" > scanner-env.sh
          echo "export BUILD_DOCKER='${{ inputs.build_docker }}'" >> scanner-env.sh
          echo "export PACKAGE_NAME='${{ inputs.package_name }}'" >> scanner-env.sh
          mv variable.sh scanner-env.sh package-cache/

      - uses: actions/upload-artifact@v4
        with:
          name: package-cache
          path: package-cache


  get-run-id:
      runs-on: ubuntu-24.04-ppc64le-p10
      needs: build_info
      outputs:
        run-id: ${{ steps.get_run_id.outputs.run-id }}
      steps:
        - name: Get latest run ID of build-info.yaml
          id: get_run_id
          env:
            GH_PAT: ${{ secrets.GH_PAT }}
            REPO: ${{ github.repository }}
          run: |
            WORKFLOW_FILE="build-info.yaml"
            
            RUN_INFO=$(curl -s -H "Authorization: token $GH_PAT" \
              "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_FILE/runs?status=completed&per_page=1")
  
            echo "$RUN_INFO"
            
            RUN_ID=$(echo "$RUN_INFO" | jq -r '.workflow_runs[0].id')
            echo "Latest run-id: $RUN_ID"
            echo "run-id=$RUN_ID" >> $GITHUB_OUTPUT
  
  download-artifact:
      runs-on: ubuntu-24.04-ppc64le-p10
      needs: get-run-id
      steps:
        - uses: actions/download-artifact@v5
          with:
            name: package-cache
            github-token: ${{ secrets.GH_PAT }}
            repository: ${{ github.repository }}
            run-id: ${{ needs.get-run-id.outputs.run-id }}
  
        - name: Show downloaded contents
          run: |
              echo "--------------------printing downloaded--------------------------------"
              ls -R
              
    
